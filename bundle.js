(()=>{"use strict";var n={426:(n,e,t)=>{t.d(e,{Z:()=>A});var r=t(537),o=t.n(r),i=t(645),a=t.n(i)()(o());a.push([n.id,"@import url(https://fonts.googleapis.com/css2?family=Montserrat:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap);"]),a.push([n.id,"body {\n    margin: 0;\n    padding: 0;\n    font-family: 'Montserrat', sans-serif;\n    height: 100vh;\n    background-color: pink;\n}\n\n:root {\n    --primary: rgb(77, 77, 77);\n}\n\n.main {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    height: 100vh;\n}\n\n.left-clm {\n    margin: 16px;\n    position: absolute;\n    top: 0;\n    left: 0;\n}\n\n.weather-container {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    gap: 16px;\n\n}\n\n.weather-left {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: column;\n}\n\n.bar {\n    background-color: var(--primary);\n    width: 1px;\n    height: 160px;\n}\n\n.container-transparent {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n}  \n\n\n.city-current {\n    line-height: 100%;\n    font-size: 4rem;\n    font-weight: 300;\n    color: var(--primary);\n}\n\n.time-current {\n    font-size: 3rem;\n    font-weight: 200;\n    color: var(--primary);\n}\n\n.sunrise-current, .sunset-current {\n    font-size: 2rem;\n    font-weight: 100;\n    color: var(--primary);\n}\n\n.search-container {\n    margin: 16px;\n    position: absolute;\n    top: 0;\n    right: 0;\n}\n\n.searchbox {\n    background-color : transparent;\n    font-size: 2rem;\n    outline: none;\n    border-bottom: 1px solid var(--primary) ;\n    border-top-style: hidden;\n    border-right-style: hidden;\n    border-left-style: hidden;\n    margin-right: auto;\n    \n}\n\n::placeholder { /* Chrome, Firefox, Opera, Safari 10.1+ */\n    color: var(--primary);\n    font-family: 'Montserrat', sans-serif;\n    font-weight: 300;\n    opacity: 1; /* Firefox */\n  }\n\n.submit {\n    outline: none;\n    border: none;\n    background-color: transparent;\n    cursor: pointer;\n}\n\nbutton i {\n    color: var(--primary);\n}\n\ntextarea:focus, input:focus{\n    outline: none;\n}\n*:focus {\n    outline: none;\n}\n\n\n.invalid {\n    border-bottom: 1px solid red;\n}\n\n\n.weatherid-current {\n    font-size: 2rem;\n    font-weight: 200;\n    color: var(--primary)\n}\n\n.weather-item {\n    display: flex;\n    justify-content: space-between;\n    width: 100%;\n    padding: 4px;\n    font-weight: 200;\n    font-size: 1.25rem;\n    color: var(--primary);\n}\n\n.temperature-current {\n    font-weight: 200;\n    font-size: 4.5rem;\n    line-height: 50%;\n    padding: 8px;\n    text-align: center;\n    color: var(--primary);\n}\n\n.weather-highlow {\n    font-weight: 200;\n    font-size: 1rem;\n    color: var(--primary);\n}\n\n.timeinfo {\n    font-size: 1rem;\n    text-align: center;\n    position: absolute;\n    margin-bottom: 8px;\n    bottom: 0;\n    color: var(--primary);\n}\n\n\n\n\n\n\n","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAEA;IACI,SAAS;IACT,UAAU;IACV,qCAAqC;IACrC,aAAa;IACb,sBAAsB;AAC1B;;AAEA;IACI,0BAA0B;AAC9B;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,uBAAuB;IACvB,aAAa;AACjB;;AAEA;IACI,YAAY;IACZ,kBAAkB;IAClB,MAAM;IACN,OAAO;AACX;;AAEA;IACI,aAAa;IACb,uBAAuB;IACvB,mBAAmB;IACnB,SAAS;;AAEb;;AAEA;IACI,aAAa;IACb,uBAAuB;IACvB,mBAAmB;IACnB,sBAAsB;AAC1B;;AAEA;IACI,gCAAgC;IAChC,UAAU;IACV,aAAa;AACjB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,uBAAuB;AAC3B;;;AAGA;IACI,iBAAiB;IACjB,eAAe;IACf,gBAAgB;IAChB,qBAAqB;AACzB;;AAEA;IACI,eAAe;IACf,gBAAgB;IAChB,qBAAqB;AACzB;;AAEA;IACI,eAAe;IACf,gBAAgB;IAChB,qBAAqB;AACzB;;AAEA;IACI,YAAY;IACZ,kBAAkB;IAClB,MAAM;IACN,QAAQ;AACZ;;AAEA;IACI,8BAA8B;IAC9B,eAAe;IACf,aAAa;IACb,wCAAwC;IACxC,wBAAwB;IACxB,0BAA0B;IAC1B,yBAAyB;IACzB,kBAAkB;;AAEtB;;AAEA,gBAAgB,yCAAyC;IACrD,qBAAqB;IACrB,qCAAqC;IACrC,gBAAgB;IAChB,UAAU,EAAE,YAAY;EAC1B;;AAEF;IACI,aAAa;IACb,YAAY;IACZ,6BAA6B;IAC7B,eAAe;AACnB;;AAEA;IACI,qBAAqB;AACzB;;AAEA;IACI,aAAa;AACjB;AACA;IACI,aAAa;AACjB;;;AAGA;IACI,4BAA4B;AAChC;;;AAGA;IACI,eAAe;IACf,gBAAgB;IAChB;AACJ;;AAEA;IACI,aAAa;IACb,8BAA8B;IAC9B,WAAW;IACX,YAAY;IACZ,gBAAgB;IAChB,kBAAkB;IAClB,qBAAqB;AACzB;;AAEA;IACI,gBAAgB;IAChB,iBAAiB;IACjB,gBAAgB;IAChB,YAAY;IACZ,kBAAkB;IAClB,qBAAqB;AACzB;;AAEA;IACI,gBAAgB;IAChB,eAAe;IACf,qBAAqB;AACzB;;AAEA;IACI,eAAe;IACf,kBAAkB;IAClB,kBAAkB;IAClB,kBAAkB;IAClB,SAAS;IACT,qBAAqB;AACzB",sourcesContent:["@import url('https://fonts.googleapis.com/css2?family=Montserrat:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap');\n\nbody {\n    margin: 0;\n    padding: 0;\n    font-family: 'Montserrat', sans-serif;\n    height: 100vh;\n    background-color: pink;\n}\n\n:root {\n    --primary: rgb(77, 77, 77);\n}\n\n.main {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    height: 100vh;\n}\n\n.left-clm {\n    margin: 16px;\n    position: absolute;\n    top: 0;\n    left: 0;\n}\n\n.weather-container {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    gap: 16px;\n\n}\n\n.weather-left {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: column;\n}\n\n.bar {\n    background-color: var(--primary);\n    width: 1px;\n    height: 160px;\n}\n\n.container-transparent {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n}  \n\n\n.city-current {\n    line-height: 100%;\n    font-size: 4rem;\n    font-weight: 300;\n    color: var(--primary);\n}\n\n.time-current {\n    font-size: 3rem;\n    font-weight: 200;\n    color: var(--primary);\n}\n\n.sunrise-current, .sunset-current {\n    font-size: 2rem;\n    font-weight: 100;\n    color: var(--primary);\n}\n\n.search-container {\n    margin: 16px;\n    position: absolute;\n    top: 0;\n    right: 0;\n}\n\n.searchbox {\n    background-color : transparent;\n    font-size: 2rem;\n    outline: none;\n    border-bottom: 1px solid var(--primary) ;\n    border-top-style: hidden;\n    border-right-style: hidden;\n    border-left-style: hidden;\n    margin-right: auto;\n    \n}\n\n::placeholder { /* Chrome, Firefox, Opera, Safari 10.1+ */\n    color: var(--primary);\n    font-family: 'Montserrat', sans-serif;\n    font-weight: 300;\n    opacity: 1; /* Firefox */\n  }\n\n.submit {\n    outline: none;\n    border: none;\n    background-color: transparent;\n    cursor: pointer;\n}\n\nbutton i {\n    color: var(--primary);\n}\n\ntextarea:focus, input:focus{\n    outline: none;\n}\n*:focus {\n    outline: none;\n}\n\n\n.invalid {\n    border-bottom: 1px solid red;\n}\n\n\n.weatherid-current {\n    font-size: 2rem;\n    font-weight: 200;\n    color: var(--primary)\n}\n\n.weather-item {\n    display: flex;\n    justify-content: space-between;\n    width: 100%;\n    padding: 4px;\n    font-weight: 200;\n    font-size: 1.25rem;\n    color: var(--primary);\n}\n\n.temperature-current {\n    font-weight: 200;\n    font-size: 4.5rem;\n    line-height: 50%;\n    padding: 8px;\n    text-align: center;\n    color: var(--primary);\n}\n\n.weather-highlow {\n    font-weight: 200;\n    font-size: 1rem;\n    color: var(--primary);\n}\n\n.timeinfo {\n    font-size: 1rem;\n    text-align: center;\n    position: absolute;\n    margin-bottom: 8px;\n    bottom: 0;\n    color: var(--primary);\n}\n\n\n\n\n\n\n"],sourceRoot:""}]);const A=a},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",r=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),r&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),r&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,r,o,i){"string"==typeof n&&(n=[[null,n,void 0]]);var a={};if(r)for(var A=0;A<this.length;A++){var c=this[A][0];null!=c&&(a[c]=!0)}for(var s=0;s<n.length;s++){var l=[].concat(n[s]);r&&a[l[0]]||(void 0!==i&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=i),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),o&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=o):l[4]="".concat(o)),e.push(l))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),i="/*# ".concat(o," */"),a=t.sources.map((function(n){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(n," */")}));return[e].concat(a).concat([i]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,r=0;r<e.length;r++)if(e[r].identifier===n){t=r;break}return t}function r(n,r){for(var i={},a=[],A=0;A<n.length;A++){var c=n[A],s=r.base?c[0]+r.base:c[0],l=i[s]||0,u="".concat(s," ").concat(l);i[s]=l+1;var p=t(u),d={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==p)e[p].references++,e[p].updater(d);else{var f=o(d,r);r.byIndex=A,e.splice(A,0,{identifier:u,updater:f,references:1})}a.push(u)}return a}function o(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,o){var i=r(n=n||[],o=o||{});return function(n){n=n||[];for(var a=0;a<i.length;a++){var A=t(i[a]);e[A].references--}for(var c=r(n,o),s=0;s<i.length;s++){var l=t(i[s]);0===e[l].references&&(e[l].updater(),e.splice(l,1))}i=c}}},569:n=>{var e={};n.exports=function(n,t){var r=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,o&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var i=t.sourceMap;i&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),e.styleTagTransform(r,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(r){var o=e[r];if(void 0!==o)return o.exports;var i=e[r]={id:r,exports:{}};return n[r](i,i.exports,t),i.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var r in e)t.o(e,r)&&!t.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:e[r]})},t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n=t(379),e=t.n(n),r=t(795),o=t.n(r),i=t(569),a=t.n(i),A=t(565),c=t.n(A),s=t(216),l=t.n(s),u=t(589),p=t.n(u),d=t(426),f={};function m(n){return new Date(1e3*n).toLocaleTimeString(navigator.language,{hour:"2-digit",minute:"2-digit"})}function h(n){return Math.trunc(n)}f.styleTagTransform=p(),f.setAttributes=c(),f.insert=a().bind(null,"head"),f.domAPI=o(),f.insertStyleElement=l(),e()(d.Z,f),d.Z&&d.Z.locals&&d.Z.locals;const B=document.querySelector(".submit"),C=document.querySelector("#searchbox");let g;C.addEventListener("input",(()=>{g=C.value.toLowerCase(),C.classList.remove("invalid"),""===g&&C.classList.add("invalid")})),B.addEventListener("click",(n=>{n.preventDefault(),""==g||void 0===g?console.log("no city"):(console.log(g),async function(n){let e=`https://api.openweathermap.org/data/2.5/weather?q=${n}&units=metric&appid=8713dd0c20edf39f938c122b0184f85b`,t=await fetch(e,{mode:"cors"});if(!t.ok)throw new Error(`City ${n} not found`);var r,o;r=await t.json(),document.querySelector("#searchbox").value="",document.querySelector(".city-current").innerHTML=`${r.name}, ${r.sys.country}`,document.querySelector(".time-current").innerHTML=`${m(r.dt)}`,document.querySelector(".sunrise-current").innerHTML=`Sunrise ${m(r.sys.sunrise)}`,document.querySelector(".sunset-current").innerHTML=`Sunset ${m(r.sys.sunset)}`,document.querySelector(".temperature-current").innerHTML=`${h(r.main.temp)}&#176;`,document.querySelector(".weatherid-current").innerHTML=`${o=r.weather[0].description,o.charAt(0).toUpperCase()+o.slice(1)}`,document.querySelector(".weather-highlow").innerHTML=`H: ${h(r.main.temp_max)}&#176; | L: ${h(r.main.temp_min)}&#176;`,document.querySelector(".feelslike-current").innerHTML=`${h(r.main.feels_like)}&#176;`,document.querySelector(".humidity-current").innerHTML=`${r.main.humidity}%`,document.querySelector(".pressure-current").innerHTML=`${r.main.pressure}hPa`,document.querySelector(".wind-current").innerHTML=`${h(r.wind.speed)}m/s`,console.log(r.weather[0].main),console.log(r)}(g))})),console.log("hello")})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,